{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [],
  "dynamicRoutes": [
    {
      "page": "/api/images/[...path]",
      "regex": "^/api/images/(.+?)(?:/)?$",
      "routeKeys": {
        "nxtPpath": "nxtPpath"
      },
      "namedRegex": "^/api/images/(?<nxtPpath>.+?)(?:/)?$"
    },
    {
      "page": "/api/postgrest/[...path]",
      "regex": "^/api/postgrest/(.+?)(?:/)?$",
      "routeKeys": {
        "nxtPpath": "nxtPpath"
      },
      "namedRegex": "^/api/postgrest/(?<nxtPpath>.+?)(?:/)?$"
    },
    {
      "page": "/api/users/[userId]",
      "regex": "^/api/users/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPuserId": "nxtPuserId"
      },
      "namedRegex": "^/api/users/(?<nxtPuserId>[^/]+?)(?:/)?$"
    },
    {
      "page": "/product/[id]/images",
      "regex": "^/product/([^/]+?)/images(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/product/(?<nxtPid>[^/]+?)/images(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/admin",
      "regex": "^/admin(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin(?:/)?$"
    },
    {
      "page": "/admin/menu",
      "regex": "^/admin/menu(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/menu(?:/)?$"
    },
    {
      "page": "/admin/message",
      "regex": "^/admin/message(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/message(?:/)?$"
    },
    {
      "page": "/admin/role",
      "regex": "^/admin/role(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/role(?:/)?$"
    },
    {
      "page": "/admin/transactiontype",
      "regex": "^/admin/transactiontype(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/transactiontype(?:/)?$"
    },
    {
      "page": "/admin/user",
      "regex": "^/admin/user(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/user(?:/)?$"
    },
    {
      "page": "/admin/user/createUser",
      "regex": "^/admin/user/createUser(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/user/createUser(?:/)?$"
    },
    {
      "page": "/admin/user/permission",
      "regex": "^/admin/user/permission(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/user/permission(?:/)?$"
    },
    {
      "page": "/admin/user/role",
      "regex": "^/admin/user/role(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/user/role(?:/)?$"
    },
    {
      "page": "/admin/user/rolePermission",
      "regex": "^/admin/user/rolePermission(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/user/rolePermission(?:/)?$"
    },
    {
      "page": "/favicon.ico",
      "regex": "^/favicon\\.ico(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/favicon\\.ico(?:/)?$"
    },
    {
      "page": "/inventory/manage",
      "regex": "^/inventory/manage(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/inventory/manage(?:/)?$"
    },
    {
      "page": "/inventory/transaction",
      "regex": "^/inventory/transaction(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/inventory/transaction(?:/)?$"
    },
    {
      "page": "/location",
      "regex": "^/location(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/location(?:/)?$"
    },
    {
      "page": "/location/manage",
      "regex": "^/location/manage(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/location/manage(?:/)?$"
    },
    {
      "page": "/product",
      "regex": "^/product(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/product(?:/)?$"
    },
    {
      "page": "/product/addProduct",
      "regex": "^/product/addProduct(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/product/addProduct(?:/)?$"
    },
    {
      "page": "/product/editProducts",
      "regex": "^/product/editProducts(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/product/editProducts(?:/)?$"
    },
    {
      "page": "/warehouse",
      "regex": "^/warehouse(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/warehouse(?:/)?$"
    },
    {
      "page": "/warehouse/manage",
      "regex": "^/warehouse/manage(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/warehouse/manage(?:/)?$"
    },
    {
      "page": "/zone",
      "regex": "^/zone(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/zone(?:/)?$"
    },
    {
      "page": "/zone/manage",
      "regex": "^/zone/manage(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/zone/manage(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "RSC",
    "varyHeader": "RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Router-Segment-Prefetch",
    "prefetchHeader": "Next-Router-Prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "Next-Router-Segment-Prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  },
  "rewrites": []
}